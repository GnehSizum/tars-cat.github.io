"use strict";(self.webpackChunkai_docs=self.webpackChunkai_docs||[]).push([[9371],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>k});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var o=a.createContext({}),i=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},d=function(e){var n=i(e.components);return a.createElement(o.Provider,{value:n},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),s=i(t),m=l,k=s["".concat(o,".").concat(m)]||s[m]||c[m]||r;return t?a.createElement(k,p(p({ref:n},d),{},{components:t})):a.createElement(k,p({ref:n},d))}));function k(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,p=new Array(r);p[0]=m;var u={};for(var o in n)hasOwnProperty.call(n,o)&&(u[o]=n[o]);u.originalType=e,u[s]="string"==typeof e?e:l,p[1]=u;for(var i=2;i<r;i++)p[i]=t[i];return a.createElement.apply(null,p)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8367:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>p,default:()=>s,frontMatter:()=>r,metadata:()=>u,toc:()=>i});var a=t(7462),l=(t(7294),t(3905));const r={},p="Modern C++",u={unversionedId:"cpp_03",id:"cpp_03",title:"Modern C++",description:"\u5e38\u91cf",source:"@site/docs/cpp_03.md",sourceDirName:".",slug:"/cpp_03",permalink:"/docs/cpp_03",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cpp_03.md",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"C++\u591a\u6587\u4ef6\u7f16\u7a0b",permalink:"/docs/cpp_01"},next:{title:"\u7f16\u8bd1\u3001\u94fe\u63a5\u3001\u9759\u6001\u5e93\u3001\u52a8\u6001\u5e93",permalink:"/docs/gcc_g++"}},o={},i=[{value:"\u5e38\u91cf",id:"\u5e38\u91cf",level:2},{value:"nullptr",id:"nullptr",level:3},{value:"constexpr",id:"constexpr",level:3},{value:"\u7c7b\u578b\u63a8\u5bfc",id:"\u7c7b\u578b\u63a8\u5bfc",level:2},{value:"auto",id:"auto",level:3},{value:"decltype",id:"decltype",level:2},{value:"\u5c3e\u8fd4\u56de\u7c7b\u578b\u63a8\u5bfc",id:"\u5c3e\u8fd4\u56de\u7c7b\u578b\u63a8\u5bfc",level:3},{value:"decltype(auto)",id:"decltypeauto",level:3},{value:"\u63a7\u5236\u6d41",id:"\u63a7\u5236\u6d41",level:2},{value:"\u57fa\u4e8e\u8303\u56f4\u7684for\u5faa\u73af",id:"\u57fa\u4e8e\u8303\u56f4\u7684for\u5faa\u73af",level:3},{value:"\u9762\u5411\u5bf9\u8c61",id:"\u9762\u5411\u5bf9\u8c61",level:2},{value:"\u59d4\u6258\u6784\u9020",id:"\u59d4\u6258\u6784\u9020",level:3},{value:"\u7ee7\u627f\u6784\u9020",id:"\u7ee7\u627f\u6784\u9020",level:3},{value:"\u663e\u5f0f\u865a\u51fd\u6570\u91cd\u8f7d",id:"\u663e\u5f0f\u865a\u51fd\u6570\u91cd\u8f7d",level:3},{value:"override",id:"override",level:4},{value:"final",id:"final",level:4},{value:"\u663e\u5f0f\u7981\u7528\u9ed8\u8ba4\u51fd\u6570",id:"\u663e\u5f0f\u7981\u7528\u9ed8\u8ba4\u51fd\u6570",level:3},{value:"\u5f3a\u7c7b\u578b\u679a\u4e3e",id:"\u5f3a\u7c7b\u578b\u679a\u4e3e",level:3},{value:"Lambda \u8868\u8fbe\u5f0f",id:"lambda-\u8868\u8fbe\u5f0f",level:2},{value:"\u57fa\u7840",id:"\u57fa\u7840",level:3},{value:"\u4e0d\u6355\u83b7",id:"\u4e0d\u6355\u83b7",level:3},{value:"\u6309\u503c\u6355\u83b7",id:"\u6309\u503c\u6355\u83b7",level:3},{value:"\u6309\u5f15\u7528\u6355\u83b7",id:"\u6309\u5f15\u7528\u6355\u83b7",level:3},{value:"\u9690\u5f0f\u6355\u83b7",id:"\u9690\u5f0f\u6355\u83b7",level:3},{value:"\u6cdb\u578bLambda",id:"\u6cdb\u578blambda",level:3},{value:"\u667a\u80fd\u6307\u9488\u4e0e\u5185\u5b58\u7ba1\u7406",id:"\u667a\u80fd\u6307\u9488\u4e0e\u5185\u5b58\u7ba1\u7406",level:2},{value:"RAII \u4e0e\u5f15\u7528\u8ba1\u6570",id:"raii-\u4e0e\u5f15\u7528\u8ba1\u6570",level:3},{value:"std::unique_ptr",id:"stdunique_ptr",level:3},{value:"std::shared_ptr",id:"stdshared_ptr",level:3},{value:"\u6a21\u677f",id:"\u6a21\u677f",level:2},{value:"\u51fd\u6570\u6a21\u677f",id:"\u51fd\u6570\u6a21\u677f",level:3}],d={toc:i};function s(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"modern-c"},"Modern C++"),(0,l.kt)("h2",{id:"\u5e38\u91cf"},"\u5e38\u91cf"),(0,l.kt)("h3",{id:"nullptr"},"nullptr"),(0,l.kt)("p",null,"\u66ff\u4ee3 ",(0,l.kt)("inlineCode",{parentName:"p"},"NULL")," \u3002C++11 \u5f15\u5165\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"nullptr")," \u5173\u952e\u5b57\uff0c\u4e13\u95e8\u7528\u6765\u533a\u5206\u7a7a\u6307\u9488\u30010 \u3002\u800c nullptr \u7684\u7c7b\u578b\u4e3a nullptr_t \uff0c\u80fd\n\u591f\u9690\u5f0f\u7684\u8f6c\u6362\u4e3a\u4efb\u4f55\u6307\u9488\u6216\u6210\u5458\u6307\u9488\u7684\u7c7b\u578b\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"foo(0);       // \u8c03\u7528 foo(int)\n// foo(NULL); // \u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\nfoo(nullptr); // \u8c03\u7528 foo(char*)\n")),(0,l.kt)("h3",{id:"constexpr"},"constexpr"),(0,l.kt)("p",null,"\u663e\u5f0f\u58f0\u660e\u5e38\u91cf\u8868\u8fbe\u5f0f\u3002 ",(0,l.kt)("inlineCode",{parentName:"p"},"const")," \u4fee\u9970\u7684\u53d8\u91cf\u53ea\u5728\u4e00\u5b9a\u60c5\u51b5\u4e0b\u662f\u5e38\u91cf\u8868\u8fbe\u5f0f\uff0c\u8fd9\u6709\u65f6\u53ef\u80fd\u5e26\u6765\u56f0\u6270\u3002C++11 \u63d0\u4f9b\u4e86  ",(0,l.kt)("inlineCode",{parentName:"p"},"constexpr")," \u8ba9\u7528\u6237\u663e\u5f0f\u7684\u58f0\u660e\u51fd\u6570\u6216\u5bf9\u8c61\u6784\u9020\u51fd\u6570\u5728 ",(0,l.kt)("strong",{parentName:"p"},"\u7f16\u8bd1\u671f")," \u4f1a\u6210\u4e3a\u5e38\u91cf\u8868\u8fbe\u5f0f\u3002\u4ece C++14 \u5f00\u59cb\uff0cconstexpr \u51fd\u6570\u53ef\u4ee5\u5728\u5185\u90e8\u4f7f\u7528\u5c40\u90e8\u53d8\u91cf\u3001\u5faa\u73af\u548c\u5206\u652f\u7b49\u7b80\u5355\u8bed\u53e5\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'const int len_1 = 5; // \u5e38\u91cf\u8868\u8fbe\u5f0f\nconst int len_2 = len_1 + 1; // \u5e38\u91cf\u8868\u8fbe\u5f0f\nconstexpr int len_2_constexpr = 1 + 2 + 3; // \u663e\u5f0f\u58f0\u660e\u7684\u5e38\u91cf\u8868\u8fbe\u5f0f\nint len = 5;\nconst int len_3 = len + 1; // \u975e\u5e38\u91cf\u8868\u8fbe\u5f0f\n// \u4f7f\u7528static_assert\uff0c\u5f53\u5176\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u5e38\u91cf\u8868\u8fbe\u5f0f\u65f6\u624d\u4e0d\u4f1a\u62a5\u9519\nstatic_assert(len_1, "");\nstatic_assert(len_2, "");\nstatic_assert(len_2_constexpr, "");\nstatic_assert(len_3, "");  // \u62a5\u9519\uff0c\u8bf4\u660elen_3\u4e0d\u662f\u5e38\u91cf\u8868\u8fbe\u5f0f\n')),(0,l.kt)("h2",{id:"\u7c7b\u578b\u63a8\u5bfc"},"\u7c7b\u578b\u63a8\u5bfc"),(0,l.kt)("h3",{id:"auto"},"auto"),(0,l.kt)("p",null,"\u4ece C++11 \u8d77, \u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"auto")," \u5173\u952e\u5b57\u8fdb\u884c\u7c7b\u578b\u63a8\u5bfc\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"class MagicFoo {\npublic:\n    std::vector<int> vec;\n    MagicFoo(std::initializer_list<int> list) {\n        // \u4e0d\u7528\u518d\u5199\u5197\u957f\u7684\u8fed\u4ee3\u5668\u7c7b\u578b\u540d\u4e86\n        for (auto it = list.begin(); it != list.end(); ++it) {\n            vec.push_back(*it);\n        }\n    }\n};\n\nauto i = 5; // i \u88ab\u63a8\u5bfc\u4e3a int\nauto arr = new auto(10); // arr \u88ab\u63a8\u5bfc\u4e3a int \n")),(0,l.kt)("p",null,"\u4ece C++20 \u8d77\uff0c ",(0,l.kt)("inlineCode",{parentName:"p"},"auto")," \u751a\u81f3\u80fd\u7528\u4e8e\u51fd\u6570\u4f20\u53c2\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int add(auto x, auto y) {\n    return x+y;\n}\n")),(0,l.kt)("h2",{id:"decltype"},"decltype"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"decltype")," \u5173\u952e\u5b57\u662f\u4e3a\u4e86\u89e3\u51b3 ",(0,l.kt)("inlineCode",{parentName:"p"},"auto")," \u5173\u952e\u5b57\u53ea\u80fd\u5bf9\u53d8\u91cf\u8fdb\u884c\u7c7b\u578b\u63a8\u5bfc\u7684\u7f3a\u9677\u800c\u51fa\u73b0\u7684\uff0c\u53ef\u63a8\u5bfc\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"auto x = 1;\nauto y = 2;\ndecltype(x+y) z; // z\u7684\u7c7b\u578b\u662fint\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"std::is_same<T, U>")," \u7528\u4e8e\u5224\u65ad T \u548c U \u8fd9\u4e24\u4e2a\u7c7b\u578b\u662f\u5426\u76f8\u7b49\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'if (std::is_same<decltype(x), int>::value)   // \u4e3a\u771f\n    std::cout << "type x == int" << std::endl;\nif (std::is_same<decltype(x), float>::value) // \u4e3a\u5047\n    std::cout << "type x == float" << std::endl;\n')),(0,l.kt)("h3",{id:"\u5c3e\u8fd4\u56de\u7c7b\u578b\u63a8\u5bfc"},"\u5c3e\u8fd4\u56de\u7c7b\u578b\u63a8\u5bfc"),(0,l.kt)("p",null,"C++11\u5f15\u5165\u4e86\u4e00\u4e2a\u5c3e\u8fd4\u56de\u7c7b\u578b\uff08trailing return type\uff09\uff0c\u5229\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"auto")," \u5173\u952e\u5b57\u5c06\u8fd4\u56de\u7c7b\u578b\u540e\u7f6e\u3002C++14\u5f00\u59cb\u53ef\u4ee5\u76f4\u63a5\u8ba9\u666e\u901a\u51fd\u6570\u5177\u5907\u8fd4\u56de\u503c\u63a8\u5bfc\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"// after c++11\ntemplate<typename T, typename U>\nauto add2(T x, U y) -> decltype(x+y){\n    return x + y;\n}\n// after c++14\ntemplate<typename T, typename U>\nauto add3(T x, U y){\n    return x + y;\n}\n")),(0,l.kt)("h3",{id:"decltypeauto"},"decltype(auto)"),(0,l.kt)("p",null,"C++14\u5f15\u5165\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"decltype(auto)")," \u4e3b\u8981\u7528\u4e8e\u5bf9\u8f6c\u53d1\u51fd\u6570\u6216\u5c01\u88c5\u7684\u8fd4\u56de\u7c7b\u578b\u8fdb\u884c\u63a8\u5bfc\uff0c\u5b83\u4f7f\u6211\u4eec\u65e0\u9700\u663e\u5f0f\u6307\u5b9a decltype \u7684\u53c2\u6570\u8868\u8fbe\u5f0f\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"tsd::string lookup1();\nstd::string& lookup2();\n\n// C++11\nstd::string look_up_a_string_1() {\n    return lookup1();\n}\nstd::string& look_up_a_string_2() {\n    return lookup2();\n}\n\n// after C++14\ndecltype(auto) look_up_a_string_1() {\n    return lookup1();\n}\ndecltype(auto) look_up_a_string_2() {\n    return lookup2();\n}\n")),(0,l.kt)("h2",{id:"\u63a7\u5236\u6d41"},"\u63a7\u5236\u6d41"),(0,l.kt)("h3",{id:"\u57fa\u4e8e\u8303\u56f4\u7684for\u5faa\u73af"},"\u57fa\u4e8e\u8303\u56f4\u7684for\u5faa\u73af"),(0,l.kt)("p",null,"C++11 \u5f15\u5165\u4e86\u57fa\u4e8e\u8303\u56f4\u7684\u5faa\u73af\u5199\u6cd5\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::vector<int> vec = {1, 2, 3, 4};\nfor (auto element : vec)\n    std::cout << element << std::endl; // \u4e0d\u4f1a\u6539\u53d8vec\u7684\u5143\u7d20\uff0c\u7528\u4e8e\u8bfb\nfor (auto &element : vec)\n    element += 1;         // \u53ef\u4ee5\u6539\u53d8vec\u7684\u5143\u7d20\uff0c\u7528\u4e8e\u5199\n")),(0,l.kt)("h2",{id:"\u9762\u5411\u5bf9\u8c61"},"\u9762\u5411\u5bf9\u8c61"),(0,l.kt)("h3",{id:"\u59d4\u6258\u6784\u9020"},"\u59d4\u6258\u6784\u9020"),(0,l.kt)("p",null,"C++11 \u5f15\u5165\u4e86\u59d4\u6258\u6784\u9020\u7684\u6982\u5ff5\uff0c\u8fd9\u4f7f\u5f97\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u8c03\u7528\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\n\nclass Base {\npublic:\n    int value1;\n    int value2;\n    Base() {\n        value1 = 1;\n    }\n    Base(int value) : Base() { // \u59d4\u6258 Base() \u6784\u9020\u51fd\u6570\n        value2 = value;\n    }\n};\n\nBase b(2);\n")),(0,l.kt)("h3",{id:"\u7ee7\u627f\u6784\u9020"},"\u7ee7\u627f\u6784\u9020"),(0,l.kt)("p",null,"C++11 \u5229\u7528\u5173\u952e\u5b57 ",(0,l.kt)("inlineCode",{parentName:"p"},"using")," \u5f15\u5165\u4e86\u7ee7\u627f\u6784\u9020\u51fd\u6570\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\n\nclass Base {\npublic:\n    int value1;\n    int value2;\n    Base() {\n        value1 = 1;\n    }\n    Base(int value) : Base() { // \u59d4\u6258 Base() \u6784\u9020\u51fd\u6570\n        value2 = value;\n    }\n};\n\nclass Subclass : public Base {\npublic:\n    using Base::Base; // \u7ee7\u627f\u6784\u9020\n};\n")),(0,l.kt)("h3",{id:"\u663e\u5f0f\u865a\u51fd\u6570\u91cd\u8f7d"},"\u663e\u5f0f\u865a\u51fd\u6570\u91cd\u8f7d"),(0,l.kt)("p",null,"C++11 \u5f15\u5165\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"override")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"final")," \u8fd9\u4e24\u4e2a\u5173\u952e\u5b57\u6765\u9632\u6b62 ",(0,l.kt)("strong",{parentName:"p"},"\u610f\u5916\u91cd\u8f7d\u865a\u51fd\u6570")," \u548c ",(0,l.kt)("strong",{parentName:"p"},"\u57fa\u7c7b\u7684\u865a\u51fd\u6570\u88ab\u5220\u9664\u540e\u5b50\u7c7b\u7684\u5bf9\u5e94\u51fd\u6570\u53d8\u4e3a\u666e\u901a\u65b9\u6cd5")," \u7684\u60c5\u51b5\u53d1\u751f\u3002"),(0,l.kt)("h4",{id:"override"},"override"),(0,l.kt)("p",null,"\u5f53\u91cd\u8f7d\u865a\u51fd\u6570\u65f6\uff0c\u5f15\u5165 ",(0,l.kt)("inlineCode",{parentName:"p"},"override")," \u5173\u952e\u5b57\u5c06\u663e\u5f0f\u7684\u544a\u77e5\u7f16\u8bd1\u5668\u8fdb\u884c\u91cd\u8f7d\uff0c\u7f16\u8bd1\u5668\u5c06\u68c0\u67e5\u57fa\u7c7b\u662f\u5426\u5b58\u5728\u8fd9\u6837\u7684\u865a\u51fd\u6570\uff0c\u5426\u5219\u5c06\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"struct Base {\n    virtual void foo(int); \n};\n\nstruct SubClass: Base {\n    virtual void foo(int) override;   // \u5408\u6cd5\n    virtual void foo(float) override; // \u975e\u6cd5, \u7236\u7c7b\u6ca1\u6709\u6b64\u865a\u51fd\u6570\n};\n")),(0,l.kt)("h4",{id:"final"},"final"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"final")," \u5219\u662f\u4e3a\u4e86\u9632\u6b62\u7c7b\u88ab\u7ee7\u7eed\u7ee7\u627f\u4ee5\u53ca\u7ec8\u6b62\u865a\u51fd\u6570\u7ee7\u7eed\u91cd\u8f7d\u5f15\u5165\u7684\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"struct Base {\n    virtual void foo() final;\n};\n\nstruct SubClass1 final: Base {\n}; // \u5408\u6cd5\n\nstruct SubClass2 : SubClass1 {\n}; // \u975e\u6cd5, SubClass1 \u5df2 final\n\nstruct SubClass3: Base {\n    void foo(); // \u975e\u6cd5, foo \u5df2 final\n};\n")),(0,l.kt)("h3",{id:"\u663e\u5f0f\u7981\u7528\u9ed8\u8ba4\u51fd\u6570"},"\u663e\u5f0f\u7981\u7528\u9ed8\u8ba4\u51fd\u6570"),(0,l.kt)("p",null,"C++11\u5141\u8bb8\u663e\u5f0f\u7684\u58f0\u660e\u91c7\u7528\u6216\u62d2\u7edd\u7f16\u8bd1\u5668\u9ed8\u8ba4\u751f\u6210\u7684\u51fd\u6570\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"class Magic {\npublic:\n    Magic() = default; // \u663e\u5f0f\u58f0\u660e\u4f7f\u7528\u7f16\u8bd1\u5668\u751f\u6210\u7684\u6784\u9020\n    Magic& operator=(const Magic&) = delete; // \u663e\u5f0f\u58f0\u660e\u62d2\u7edd\u7f16\u8bd1\u5668\u751f\u6210\u9ed8\u8ba4\u8d4b\u503c\u51fd\u6570\n    Magic(int magic_number);\n}\n")),(0,l.kt)("h3",{id:"\u5f3a\u7c7b\u578b\u679a\u4e3e"},"\u5f3a\u7c7b\u578b\u679a\u4e3e"),(0,l.kt)("p",null,"C++11\u5f15\u5165\u4e86\u679a\u4e3e\u7c7b\uff08enumeration class\uff09\uff0c\u5e76\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"enum class")," \u7684\u8bed\u6cd5\u8fdb\u884c\u58f0\u660e\u3002\u679a\u4e3e\u7c7b\u5b9e\u73b0\u4e86\u7c7b\u578b\u5b89\u5168\uff0c\u9996\u5148\u4ed6\u4e0d\u80fd\u591f\u88ab\u9690\u5f0f\u7684\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u540c\u65f6\u4e5f\u4e0d\u80fd\u591f\u5c06\u5176\u4e0e\u6574\u6570\u6570\u5b57\u8fdb\u884c\u6bd4\u8f83\uff0c \u66f4\u4e0d\u53ef\u80fd\u5bf9\u4e0d\u540c\u7684\u679a\u4e3e\u7c7b\u578b\u7684\u679a\u4e3e\u503c\u8fdb\u884c\u6bd4\u8f83\u3002\u5e0c\u671b\u83b7\u5f97\u679a\u4e3e\u503c\u7684\u503c\u65f6\uff0c\u5fc5\u987b\u663e\u5f0f\u7684\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n\nenum class new_enum : unsigned int {\n    value1,\n    value2,\n    value3 = 100,\n    value4 = 100\n};\n\nint main(){\n    if (new_enum::value3 == new_enum::value4) {\n        std::cout << "new_enum::value3 == new_enum::value4" << std::endl;\n    }\n    std::cout<<(int)new_enum::value4;\n    return 0;\n}\n')),(0,l.kt)("h2",{id:"lambda-\u8868\u8fbe\u5f0f"},"Lambda \u8868\u8fbe\u5f0f"),(0,l.kt)("p",null,"Lambda \u8868\u8fbe\u5f0f\u662f\u73b0\u4ee3 C++ \u4e2d\u6700\u91cd\u8981\u7684\u7279\u6027\u4e4b\u4e00\uff0c\u800c Lambda \u8868\u8fbe\u5f0f\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u533f\u540d\u51fd\u6570\u7684\u7279\u6027\uff0c\u800c\u533f\u540d\u51fd\u6570\u5219\u662f\u5728\u9700\u8981\u4e00\u4e2a\u51fd\u6570\uff0c\u4f46\u662f\u53c8\u4e0d\u60f3\u8d39\u529b\u53bb\u547d\u540d\u4e00\u4e2a\u51fd\u6570\u7684\u60c5\u51b5\u4e0b\u53bb\u4f7f\u7528\u7684\u3002"),(0,l.kt)("h3",{id:"\u57fa\u7840"},"\u57fa\u7840"),(0,l.kt)("p",null,"Lambda \u8868\u8fbe\u5f0f\u7684\u57fa\u672c\u8bed\u6cd5\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"[\u6355\u83b7\u5217\u8868](\u53c2\u6570\u5217\u8868) \u5f02\u5e38\u6807\u8bc6(\u53ef\u9009) \u5c5e\u6027\u6807\u8bc6(\u53ef\u9009) -> \u8fd4\u56de\u7c7b\u578b {\n// \u51fd\u6570\u4f53\n}\n")),(0,l.kt)("p",null,"\u6240\u8c13\u6355\u83b7\u5217\u8868\uff0c\u5176\u5b9e\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u79cd\u53c2\u6570\uff0cLambda \u8868\u8fbe\u5f0f\u5185\u90e8\u51fd\u6570\u4f53\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4e0d\u80fd\u591f\u4f7f\u7528\u51fd\u6570\u4f53\u5916\u90e8\u7684\u53d8\u91cf\u7684\uff0c\u8fd9\u65f6\u6355\u83b7\u5217\u8868\u53ef\u4ee5\u8d77\u5230\u4f20\u9012\u5916\u90e8\u6570\u636e\u7684\u4f5c\u7528\u3002\u6839\u636e\u4f20\u9012\u7684\u884c\u4e3a\uff0c\u53d8\u91cf\u6355\u83b7\u4e5f\u5206\u4e3a\u4ee5\u4e0b\u51e0\u79cd\u3002"),(0,l.kt)("h3",{id:"\u4e0d\u6355\u83b7"},"\u4e0d\u6355\u83b7"),(0,l.kt)("p",null,"\u5982\u679c\u662f\u7a7a\u7684\u65b9\u62ec\u53f7\uff0c\u8868\u793a\u4e0d\u6355\u83b7\u4efb\u4f55\u53d8\u91cf\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"auto f = [](int a, int b) {\n    return a+b;\n}\n")),(0,l.kt)("p",null,"\u5982\u679c\u53d8\u91cf\u540d\u524d\u9762\u6709\u5f15\u7528\u7b26\u53f7 ",(0,l.kt)("strong",{parentName:"p"},"&")," \uff0c\u5219\u662f\u6309\u5f15\u7528\u6355\u83b7\uff0c\u53ef\u4ee5\u4fee\u6539\u5916\u90e8\u53d8\u91cf\u7684\u503c\uff1b"),(0,l.kt)("p",null,"\u5982\u679c\u4e0d\u52a0 ",(0,l.kt)("strong",{parentName:"p"},"&")," \uff0c\u5c31\u662f\u6309\u503c\u6355\u83b7\uff0c\u4e0d\u53ef\u4ee5\u4fee\u6539\u5916\u90e8\u53d8\u91cf\u7684\u503c\u3002"),(0,l.kt)("h3",{id:"\u6309\u503c\u6355\u83b7"},"\u6309\u503c\u6355\u83b7"),(0,l.kt)("p",null,"\u4e0e\u53c2\u6570\u4f20\u503c\u7c7b\u4f3c\uff0c\u6309\u503c\u6355\u83b7\u7684\u524d\u63d0\u662f\u53d8\u91cf\u53ef\u4ee5\u62f7\u8d1d\uff0c\u4e0d\u540c\u4e4b\u5904\u5219\u5728\u4e8e\uff0c\u88ab\u6355\u83b7\u7684\u53d8\u91cf\u5728 Lambda \u8868\u8fbe\u5f0f\u88ab\u521b\u5efa\u65f6\u62f7\u8d1d\uff0c\u800c\u975e\u8c03\u7528\u65f6\u624d\u62f7\u8d1d\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int value = 1;\nauto copy_value = [value] {\n    return value;\n};\nvalue = 100;\nauto stored_value = copy_value();\n// stored_value == 1, \u800c value == 100.\n// \u56e0\u4e3a copy_value \u5728\u521b\u5efa\u65f6\u5c31\u4fdd\u5b58\u4e86\u4e00\u4efd value \u7684\u62f7\u8d1d\n")),(0,l.kt)("h3",{id:"\u6309\u5f15\u7528\u6355\u83b7"},"\u6309\u5f15\u7528\u6355\u83b7"),(0,l.kt)("p",null,"\u4e0e\u5f15\u7528\u4f20\u53c2\u7c7b\u4f3c\uff0c\u5f15\u7528\u6355\u83b7\u4fdd\u5b58\u7684\u662f\u5f15\u7528\uff0c\u503c\u4f1a\u53d1\u751f\u53d8\u5316\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int value = 1;\nauto copy_value = [&value] {\n    return value;\n};\nvalue = 100;\nauto stored_value = copy_value();\n// \u8fd9\u65f6, stored_value == 100, value == 100.\n// \u56e0\u4e3a copy_value \u4fdd\u5b58\u7684\u662f\u5f15\u7528\n")),(0,l.kt)("h3",{id:"\u9690\u5f0f\u6355\u83b7"},"\u9690\u5f0f\u6355\u83b7"),(0,l.kt)("p",null,"\u5982\u679c\u65b9\u62ec\u53f7\u5185\u53ea\u5199 ",(0,l.kt)("strong",{parentName:"p"},"&")," \uff0c\u5219\u6309\u5f15\u7528\u6355\u83b7\u6240\u6709\u5916\u90e8\u53d8\u91cf\uff1b\u5982\u679c\u65b9\u62ec\u53f7\u5185\u53ea\u5199 ",(0,l.kt)("strong",{parentName:"p"},"=")," \uff0c\u5219\u6309\u503c\u6355\u83b7\u6240\u6709\u5916\u90e8\u53d8\u91cf\u3002"),(0,l.kt)("p",null,"\u8fd8\u6709\u4e00\u79cd\u5199\u6cd5\uff0c\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e9b\u53d8\u91cf\u6309\u503c\u6355\u83b7\uff0c\u5176\u4ed6\u53d8\u91cf\u90fd\u6309\u5f15\u7528\u6355\u83b7\u3002\u4f8b\u5982 ",(0,l.kt)("inlineCode",{parentName:"p"},"[&, =N]")," \u6309\u503c\u6355\u83b7N\uff0c\u5176\u4ed6\u53d8\u91cf\u6309\u5f15\u7528\u6355\u83b7\u3002"),(0,l.kt)("p",null,"\u6240\u4ee5\u8fd9\u51e0\u4e2a\u6355\u83b7\u8bed\u53e5\u7684\u6548\u679c\u662f\u7b49\u4ef7\u7684\uff0c\u90fd\u662f\u6309\u5f15\u7528\u6355\u83b7N\uff0c\u6309\u503c\u6355\u83b7M\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"[&N, M]  [M, &N]  [&, =M]  [=, &M]\n")),(0,l.kt)("h3",{id:"\u6cdb\u578blambda"},"\u6cdb\u578bLambda"),(0,l.kt)("p",null,"\u4ece C++14 \u5f00\u59cb\uff0c Lambda \u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"auto")," \u5173\u952e\u5b57\u6765\u81ea\u52a8\u63a8\u5bfc\u53c2\u6570\u7c7b\u578b\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"auto add = [](auto x, auto y) {\n    return x+y;\n};\n\nadd(1, 2);\nadd(1.1, 2.2);\n")),(0,l.kt)("h2",{id:"\u667a\u80fd\u6307\u9488\u4e0e\u5185\u5b58\u7ba1\u7406"},"\u667a\u80fd\u6307\u9488\u4e0e\u5185\u5b58\u7ba1\u7406"),(0,l.kt)("h3",{id:"raii-\u4e0e\u5f15\u7528\u8ba1\u6570"},"RAII \u4e0e\u5f15\u7528\u8ba1\u6570"),(0,l.kt)("p",null,"\u5f15\u7528\u8ba1\u6570\u662f\u4e3a\u4e86\u9632\u6b62\u5185\u5b58\u6cc4\u9732\u800c\u4ea7\u751f\u7684\u3002\u57fa\u672c\u60f3\u6cd5\u662f\u5bf9\u4e8e\u52a8\u6001\u5206\u914d\u7684\u5bf9\u8c61\uff0c\u8fdb\u884c\u5f15\u7528\u8ba1\u6570\uff0c\u6bcf\u5f53\u589e\u52a0\u4e00\u6b21\u5bf9\u540c\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u90a3\u4e48\u5f15\u7528\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u5c31\u4f1a\u589e\u52a0\u4e00\u6b21\uff0c\u6bcf\u5220\u9664\u4e00\u6b21\u5f15\u7528\uff0c\u5f15\u7528\u8ba1\u6570\u5c31\u4f1a\u51cf\u4e00\uff0c\u5f53\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u51cf\u4e3a\u96f6\u65f6\uff0c\u5c31\u81ea\u52a8\u5220\u9664\u6307\u5411\u7684\u5806\u5185\u5b58\u3002"),(0,l.kt)("p",null,"\u5728\u4f20\u7edf C++ \u4e2d\uff0c\u300e\u8bb0\u5f97\u300f\u624b\u52a8\u91ca\u653e\u8d44\u6e90\uff0c\u603b\u4e0d\u662f\u6700\u4f73\u5b9e\u8df5\u3002\u56e0\u4e3a\u6211\u4eec\u5f88\u6709\u53ef\u80fd\u5c31\u5fd8\u8bb0\u4e86\u53bb\u91ca\u653e\u8d44\u6e90\u800c\u5bfc\u81f4\u6cc4\u9732\u3002 \u6240\u4ee5\u901a\u5e38\u7684\u505a\u6cd5\u662f\u5bf9\u4e8e\u4e00\u4e2a\u5bf9\u8c61\u800c\u8a00\uff0c\u6211\u4eec\u5728\u6784\u9020\u51fd\u6570\u7684\u65f6\u5019\u7533\u8bf7\u7a7a\u95f4\uff0c\u800c\u5728\u6790\u6784\u51fd\u6570\uff08\u5728\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\u8c03\u7528\uff09\u7684\u65f6\u5019\u91ca\u653e\u7a7a\u95f4\uff0c \u4e5f\u5c31\u662f RAII \u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316\u6280\u672f\u3002"),(0,l.kt)("p",null,"C++11 \u5f15\u5165\u667a\u80fd\u6307\u9488\u7684\u6982\u5ff5\uff0c\u8ba9\u7a0b\u5e8f\u5458\u4e0d\u518d\u9700\u8981\u5173\u5fc3\u624b\u52a8\u91ca\u653e\u5185\u5b58\u3002\u4f7f\u7528\u5b83\u4eec\u9700\u8981\u5305\u542b\u5934\u6587\u4ef6 ",(0,l.kt)("inlineCode",{parentName:"p"},"<memory>")," \u3002"),(0,l.kt)("h3",{id:"stdunique_ptr"},"std::unique_ptr"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"std::unique_ptr")," \u662f\u4e00\u79cd\u72ec\u5360\u7684\u667a\u80fd\u6307\u9488\uff0c\u5b83\u7981\u6b62\u5176\u4ed6\u667a\u80fd\u6307\u9488\u4e0e\u5176\u5171\u4eab\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4ece\u800c\u4fdd\u8bc1\u4ee3\u7801\u7684\u5b89\u5168\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::unique_ptr<int> pointer = std::make_unique<int>(10); // make_unique \u4ece C++14 \u5f15\u5165\nstd::unique_ptr<int> pointer2 = pointer; // \u975e\u6cd5\n")),(0,l.kt)("p",null,"\u65e2\u7136\u662f\u72ec\u5360\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u4e0d\u53ef\u590d\u5236\u3002\u4f46\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"std::move")," \u5c06\u5176\u8f6c\u79fb\u7ed9\u5176\u4ed6\u7684 unique_ptr \u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <memory>\n\nstruct Foo {\n    Foo() { std::cout << "Foo::Foo" << std::endl; }\n    ~Foo() { std::cout << "Foo::~Foo" << std::endl; }\n    void foo() { std::cout << "Foo::foo" << std::endl; }\n};\n\nvoid f(const Foo &) {\n    std::cout << "f(const Foo&)" << std::endl;\n}\n\nint main() {\n    std::unique_ptr<Foo> p1(std::make_unique<Foo>());\n    // p1 \u4e0d\u7a7a, \u8f93\u51fa\n    if (p1) p1->foo();\n    {\n        std::unique_ptr<Foo> p2(std::move(p1));\n        // p2 \u4e0d\u7a7a, \u8f93\u51fa\n        f(*p2);\n        // p2 \u4e0d\u7a7a, \u8f93\u51fa\n        if(p2) p2->foo();\n        // p1 \u4e3a\u7a7a, \u65e0\u8f93\u51fa\n        if(p1) p1->foo();\n        p1 = std::move(p2);\n        // p2 \u4e3a\u7a7a, \u65e0\u8f93\u51fa\n        if(p2) p2->foo();\n        std::cout << "p2 \u88ab\u9500\u6bc1" << std::endl;\n    }\n    // p1 \u4e0d\u7a7a, \u8f93\u51fa\n    if (p1) p1->foo();\n    // Foo \u7684\u5b9e\u4f8b\u4f1a\u5728\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\u88ab\u9500\u6bc1\n}\n')),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u7531\u4e8e\u72ec\u5360\uff0c ",(0,l.kt)("inlineCode",{parentName:"p"},"std::unique_ptr")," \u4e0d\u4f1a\u6709\u5f15\u7528\u8ba1\u6570\u7684\u5f00\u9500\u3002"),(0,l.kt)("h3",{id:"stdshared_ptr"},"std::shared_ptr"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"std::shared_ptr")," \u662f\u4e00\u79cd\u667a\u80fd\u6307\u9488\uff0c\u5b83\u80fd\u591f\u8bb0\u5f55\u591a\u4e2a shared_ptr \u5171\u540c\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4ece\u800c\u6d88\u9664\u663e\u5f0f\u7684\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"delete")," \uff0c\u5f53\u5f15\u7528\u8ba1\u6570\u53d8\u4e3a\u96f6\u7684\u65f6\u5019\u5c31\u4f1a\u5c06\u5bf9\u8c61\u81ea\u52a8\u5220\u9664\u3002"),(0,l.kt)("p",null,"\u4f46\u8fd8\u4e0d\u591f\uff0c\u56e0\u4e3a\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"std::shared_ptr")," \u4ecd\u7136\u9700\u8981\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"new")," \u6765\u8c03\u7528\uff0c\u8fd9\u4f7f\u5f97\u4ee3\u7801\u51fa\u73b0\u4e86\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u7684\u4e0d\u5bf9\u79f0\u3002 ",(0,l.kt)("inlineCode",{parentName:"p"},"std::make_shared")," \u5c31\u80fd\u591f\u7528\u6765\u6d88\u9664\u663e\u5f0f\u7684\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"new")," \uff0c\u4f1a\u5206\u914d\u521b\u5efa\u4f20\u5165\u53c2\u6570\u4e2d\u7684\u5bf9\u8c61\uff0c\u5e76\u8fd4\u56de\u8fd9\u4e2a\u5bf9\u8c61\u7c7b\u578b\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"std::shared_ptr")," \u6307\u9488\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\n#include <memory>\n\nvoid foo(std::shared_ptr<int> i) {\n    (*i)++;\n}\n\nint main() {\n    // Constructed a std::shared_ptr\n    auto pointer = std::make_shared<int>(10);\n    foo(pointer);\n    std::cout << *pointer << std::endl; // 11\n    // The shared_ptr will be destructed before leaving the scope\n    return 0;\n}\n")),(0,l.kt)("h2",{id:"\u6a21\u677f"},"\u6a21\u677f"),(0,l.kt)("p",null,"\u6a21\u677f\u662f\u6cdb\u578b\u7f16\u7a0b\u7684\u57fa\u7840\uff0c\u662f\u7f16\u7a0b\u4e2d\u7684\u84dd\u56fe\uff0c\u5b83\u5c06\u7b97\u6cd5\u7684\u601d\u60f3\u7ed9\u62d3\u5370\u4e0b\u6765\uff0c\u4ee5\u4e00\u79cd\u72ec\u7acb\u4e8e\u4efb\u4f55\u7279\u5b9a\u7c7b\u578b\u7684\u65b9\u5f0f\u7f16\u5199\u4ee3\u7801\u3002"),(0,l.kt)("h3",{id:"\u51fd\u6570\u6a21\u677f"},"\u51fd\u6570\u6a21\u677f"),(0,l.kt)("p",null,"\u6a21\u677f\u51fd\u6570\u5b9a\u4e49\u7684\u4e00\u822c\u5f62\u5f0f\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"template <typename type> ret-type func-name(parameter list)\n{\n   // \u51fd\u6570\u4f53\n}\n")),(0,l.kt)("p",null,"\u4e0b\u9762\u662f\u51fd\u6570\u6a21\u677f\u7684\u5b9e\u4f8b\uff0c\u8fd4\u56de\u4e24\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u503c\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <string>\n \nusing namespace std;\n \ntemplate <typename T>\ninline T const& Max (T const& a, T const& b) \n{ \n    return a < b ? b:a; \n}\n\nint main ()\n{\n \n    int i = 39;\n    int j = 20;\n    cout << "Max(i, j): " << Max(i, j) << endl;    //39\n \n    double f1 = 13.5; \n    double f2 = 20.7; \n    cout << "Max(f1, f2): " << Max(f1, f2) << endl;  //20.7\n\n    return 0;\n}\n')))}s.isMDXComponent=!0}}]);